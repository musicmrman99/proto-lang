# person | : symbolic typed using type {
#     transform
#         extract all [
#             "name" --> text,
#             "dob" --> date
#         ] from @1
#     to associated value in [
#         [] --> false,
#         any --> true
#     ]
# }
person | : symbolic type from [
    "name" --> text,
    "dob" --> date
]
person : { using person | }
person called | born on | : {
    typed person [
        "name" --> @1,
        "dob" --> @2
    ]
}

dog | : symbolic type from [
    "name" --> text,
    "dob" --> date,
    "owner" --> person
]
dog : { using dog | }
dog called | born on | owned by | : {
    typed dog [
        "name" --> @1,
        "dob" --> @2,
        "owner" --> @3
    ]
}

Yilun : person called "Yilun" born on 23/09/2018
Yilun's dog : dog called "Woof" born on 23/09/2018 owned by Yilun,
things : [
    Yilun,
    Yilun's dog
    [
        "name" --> "Something"
    ]
]

extract [person] from things
extract [dog] from things

map of | : { type from [@1] }
