Data:
    primatives:
        number - integers (length), floats (precision)
        string - character sets, maps of indexed characters (for extracting single characters)

    other primitive-likes:
        date/time - a string in a specific format
        numeric measures - time, length, mass, etc. (https://en.wikipedia.org/wiki/SI_base_unit)

    containers (maps):
        mutability
        ordering
        uniqueness
        access (random, or put on/take off 'start' and/or 'end' only - list, stack, queue, deque)

Processes:
    conversion between:
        number types
        serialising/deserialising numbers, maps, etc. to/from binary and text-encoded strings

    operations on primitives:
        string formatting
        encodings
            ascii / utf-8 / others

    operations on maps:
        search
        sort
        map/filter/reduce

    async / observer / event-driven
    concurrency
    RPC

    security (encryption, hashing, access controls, etc.)

I/O:
    buffers / buffering
    encoding / decoding
    opening / closing resources

    data sources/destinations:
        files
            file types - images, video, audio, spreadsheet, zip, etc.
        databases
        network

User Interfaces

Java
--------------------------------------------------

java.lang (most of the below)
java.math

java.text
java.util

java.concurrent

java.crypto

java.io / java.nio
java.imageio
java.net
java.util.logging

java.awt
java.swing

Primatives
--------------------

boolean
byte
character
integer
short
long

float
double

number (abstract)

string

void
null

object
class<T>
package

Collections
--------------------

Collection<T>

List<T>
Stack<T>
Queue<T>
Deque<T>
TreeMap<K,V>/TreeSet<T>
Set<T>
Map<K,V>
SortedMap<T>/SortedSet<T>

Comparator<T>

Map.Entry<K,V> - not needed in my system (a map entry is a submap, whether extracted or composed)
Observer - allows notification of changes in observable objects (ie. when the object changes, a method of all registered observers is called)
iteration - allows iteration in either direction, and addition and removal during traversal

Utils
--------------------

Math
System
Random

Interfaces
--------------------

I/O:
  Appendable
  Readable

copy - Clonable
run - Runnable
loop - Iterable<T>
sort - Comparable<T>

Meta / Packaging
--------------------

ClassLoader
Compiler
